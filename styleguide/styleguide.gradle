
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

jacoco {
    toolVersion = "0.8.6"
}
//jacocoTestReport {
//    dependsOn test
//    reports {
//        xml.enabled true
//        html.enabled true
//    }
//}
//
//test {
//    finalizedBy jacocoTestReport
//}


checkstyle {
    toolVersion = "8.37"
    configDir = file("${project.rootDir}/styleguide")
    config = resources.text.fromFile(new File(configDir, "checkstyle.xml"))
}

pmd {
    toolVersion = '6.29.0'
    consoleOutput  = true
    reportsDir = file("${project.buildDir}/reports/pmd")
    ruleSetFiles = files(file("$rootDir/styleguide/pmd-ruleset.xml"))
    ruleSets = []
}

apply plugin: 'com.diffplug.spotless'

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**', 'bazel-*/**'
        }
        toggleOffOn()
        indentWithSpaces(4)
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
    groovyGradle {
        target fileTree('.') {
            include '**/*.gradle'
            exclude '**/build/**', '**/build-*/**', 'bazel-*/**'
        }
        greclipse()
        indentWithSpaces(4)
        trimTrailingWhitespace()
        endWithNewline()
    }
    format 'misc', {
        target fileTree('.') {
            include '**/*.md', '**/.gitignore', "**/*.yml", "**/*.yaml"
            exclude '**/build/**', '**/build-*/**', 'bazel-*/**'
        }
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
}
