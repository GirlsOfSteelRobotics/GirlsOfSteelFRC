package {{widget_package_name}};

import edu.wpi.first.shuffleboard.api.widget.Description;
import edu.wpi.first.shuffleboard.api.widget.ParametrizedController;
import edu.wpi.first.shuffleboard.api.widget.SimpleAnnotatedWidget;
import javafx.fxml.FXML;
import javafx.scene.layout.Pane;

{% if widget.children_tables|length != 1 %}
import java.util.Map;
{% endif %}

@Description(name = SmartDashboardNames.WIDGET_NAME, dataTypes = {% raw %}{{% endraw %}{{widget.table}}Data.class})
@ParametrizedController("{{camel_to_snake(widget.table)}}_widget.fxml")
public class {{widget.table}}Widget extends SimpleAnnotatedWidget<{{widget.table}}Data> {
    @FXML
    private Pane m_root;

    @FXML
    protected {{widget.table}}Controller m_widgetController;

    @Override
    public Pane getView() {
        return m_root;
    }

    @FXML
    public void initialize() {

        dataOrDefault.addListener((ignored, oldData, newData) -> {
{%- if widget.children_tables|length == 1 %}
            m_widgetController.update{{widget.children_tables[0].table}}(newData);
{%- else %}
            final Map<String, Object> changes = newData.changesFrom(oldData);
            if (!changes.isEmpty()) {
                System.out.println("changes : " + changes); // NOPMD
            }
{% for child in widget.children_tables %}
            if ({{child.table}}Data.hasChanged(changes)) {
                m_widgetController.update{{child.table}}(newData.get{{child.table}}());
            }
{% endfor %}
{% endif %}
        });
    }

}

